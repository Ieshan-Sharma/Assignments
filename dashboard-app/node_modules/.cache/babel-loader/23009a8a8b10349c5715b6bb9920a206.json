{"ast":null,"code":"var _jsxFileName = \"/home/habilelabs/Documents/React Assignment/dashboard-app/src/components/Login.js\";\nimport React from 'react';\nimport { Grid, Paper, Avatar, TextField, FormControlLabel, Button, Typography, Link } from \"@material-ui/core\";\nimport DashboardOutlinedIcon from '@material-ui/icons/DashboardOutlined';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { NavLink } from 'react-router-dom';\nimport { FormHelperText } from '@material-ui/core';\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = () => {\n  const paperStyle = {\n    padding: 20,\n    height: \"55vh\",\n    width: 340,\n    margin: \"80px auto\"\n  };\n  const avatarStyle = {\n    backgroundColor: \"#1c4c74\"\n  };\n  const btnStyle = {\n    margin: '8px 0'\n  };\n  const initialValues = {\n    username: '',\n    password: '',\n    remember: false\n  };\n\n  const onSubmit = (values, props) => {\n    console.log(values);\n  };\n\n  const validationSchema = Yup.object().shape({\n    username: Yup.string().email(\"Please Enter Valid Email\").required(\"Required\")\n  });\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 10,\n      style: paperStyle,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        align: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(Avatar, {\n          style: avatarStyle,\n          children: /*#__PURE__*/_jsxDEV(DashboardOutlinedIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 49\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Sign In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: initialValues,\n        validationSchema: validationSchema,\n        onSubmit: onSubmit,\n        children: props => /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Field, {\n            as: TextField,\n            label: \"Username\",\n            name: \"username\",\n            placeholder: \"Enter your username..\",\n            fullWidth: true,\n            required: true,\n            helperText: /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              name: \"username\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 64\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            as: TextField,\n            label: \"Password\",\n            name: \"password\",\n            placeholder: \"Enter your password..\",\n            type: \"password\",\n            fullWidth: true,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            as: FormControlLabel,\n            name: \"remember\",\n            control: /*#__PURE__*/_jsxDEV(Checkbox, {\n              color: \"primary\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 37\n            }, this),\n            label: \"Remember Me\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            color: \"primary\",\n            style: btnStyle,\n            fullWidth: true,\n            variant: \"contained\",\n            children: \"Sign In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        align: \"center\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          href: \"#\",\n          children: \"Forgot Password ?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        style: {\n          marginLeft: 40\n        },\n        children: [\" Do you have an account ? \", \" \", /*#__PURE__*/_jsxDEV(NavLink, {\n          to: \"/signup\",\n          children: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/home/habilelabs/Documents/React Assignment/dashboard-app/src/components/Login.js"],"names":["React","Grid","Paper","Avatar","TextField","FormControlLabel","Button","Typography","Link","DashboardOutlinedIcon","Checkbox","NavLink","FormHelperText","Formik","Field","Form","ErrorMessage","Yup","Login","paperStyle","padding","height","width","margin","avatarStyle","backgroundColor","btnStyle","initialValues","username","password","remember","onSubmit","values","props","console","log","validationSchema","object","shape","string","email","required","marginLeft"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Grid, Paper, Avatar, TextField, FormControlLabel, Button, Typography, Link } from \"@material-ui/core\";\nimport DashboardOutlinedIcon from '@material-ui/icons/DashboardOutlined';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { NavLink } from 'react-router-dom';\nimport { FormHelperText } from '@material-ui/core';\nimport { Formik, Field, Form,ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\n\n\n\nconst Login = () => {\n\n    const paperStyle = { padding: 20, height: \"55vh\", width: 340, margin: \"80px auto\" }\n    const avatarStyle = { backgroundColor: \"#1c4c74\" }\n    const btnStyle = { margin: '8px 0' }\n    const initialValues = {\n        username: '',\n        password: '',\n        remember: false\n    }\n    const onSubmit = (values, props) => {\n        console.log(values);\n    }\n    const validationSchema=Yup.object().shape({\n        username:Yup.string().email(\"Please Enter Valid Email\").required(\"Required\"),\n    })\n    return (\n        <Grid>\n            <Paper elevation={10} style={paperStyle}>\n                <Grid align=\"center\">\n                    <Avatar style={avatarStyle}><DashboardOutlinedIcon /></Avatar>\n                    <h2>Sign In</h2>\n                </Grid>\n                <Formik initialValues={initialValues} validationSchema={validationSchema} onSubmit={onSubmit}>\n                    {(props) => (\n                        <Form>\n                            <Field as={TextField} label='Username' name='username' placeholder='Enter your username..'\n                                fullWidth required helperText={<ErrorMessage name='username'/>} />\n                            <Field as={TextField} label='Password' name='password' placeholder='Enter your password..'\n                                type='password' fullWidth required />\n                            <Field as={FormControlLabel}\n                                name='remember'\n                                control={\n                                    <Checkbox\n                                        color=\"primary\"\n                                    />\n                                }\n                                label=\"Remember Me\"\n                            />\n                            <Button type='submit' color='primary' style={btnStyle} fullWidth variant='contained'>Sign In</Button> \n                        </Form>\n                    )}\n                </Formik>\n                <Typography align='center'>\n                    <Link href='#' >\n                        Forgot Password ?\n                    </Link>\n                </Typography >\n                <Typography style={{ marginLeft: 40 }}> Do you have an account ? {\" \"}\n                    <NavLink to='/signup' >\n                        Sign Up\n                    </NavLink>\n                </Typography>\n            </Paper>\n        </Grid>\n    )\n}\nexport default Login;"]},"metadata":{},"sourceType":"module"}